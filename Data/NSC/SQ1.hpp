#ifndef SQ1_HPP_INCLUDED
#define SQ1_HPP_INCLUDED
#include <iostream>
#include <iomanip>
#include <cmath>
#include <math.h> 
#include <complex>
#include <Eigen/Dense>
#include <fstream>
#include <omp.h>
#include <vector>
#include "creat_directory.hpp"
#include "input.hpp"

using namespace std;
using namespace Eigen;



void NSC_input::Sq1()
{
  //=========================================//
  //=========================================//

    int D=1;

    if(D==1)
    { 
      //=========================================//
      //=========================================//
      int N0=N; //| == system size
      //===================================================//
      //===================================================//
      vector<double> qx;

      for(double i=-M_PI;i<M_PI;i+=2.0*M_PI/N)
      {
          qx.push_back(i);
      }
      //===================================================//
      //===================================================//

      //-------------------------------------------------------------------------------------------
      //------------------------------------------------------------------------------------------
      char title0[150];
      //------------------------------------------------------------------------------------------
      sprintf(title0,"../Data/NSC/SXiSiSj/SSX_%d_%d_%d_%d_%d_%d_%d.dat",ttt0,ttt1,jjt0,jjt1,N,nup,ndown); //| ==== Name | I
      std::ifstream file;               //| ==== File | L
      file.open(title0);                //| ==== Open | E
      //-------------------------------------------------------------------------------------------
      //-------------------------------------------------------------------------------------------

      complex<double> data1=complex<double>(0,0),data2=complex<double>(0,0);
      vector<int> f0,n0;
      vector<complex<double>> gof1,gof2;

      vector<double> e;

      int f1=0,n1=0;
      double e1;

      //===============================================//
      while(file>>f1>>n1>>data1>>data2>>e1) //|G> 
      {
        f0.push_back(f1);
        n0.push_back(n1);
        gof1.push_back(data1);
        gof2.push_back(data2);
        e.push_back(e1);
      }
      //===============================================//
      //-------------------------------------------------------------------------------------------
      //-------------------------------------------------------------------------------------------
      //char title0[150];
      bool tut=createDirectory("../Data/NSC/SXiSiSj/SXQ");
      //-------------------------------------------------------------------------------------------
      char title1[150];
      sprintf(title1,"../Data/NSC/SXiSiSj/SXQ/SXiSiSj_%d_%d_%d_%d_%d_%d_%d.dat",ttt0,ttt1,jjt0,jjt1,N,nup,ndown); //| ==== Name | I
      std::ofstream file0;               //| ==== File | L
      file0.open(title1);                //| ==== Open | E
      file0 << std::fixed << std::setprecision(16);
      //-------------------------------------------------------------------------------------------
      //-------------------------------------------------------------------------------------------

      for (int iq = 0; iq < qx.size(); iq++)
      {
          //=================================================================================//
          double w=0;
          do
          {
              complex<double> d=complex<double>(0.0,0.0);
              for(int ff=0;ff<f0.size();ff+=N0)
              {
                complex<double> dd1=complex<double>(0.0,0.0);
                complex<double> dd2=complex<double>(0.0,0.0);
                complex<double> II=complex<double>(0.0,1.0);
                for(int test=ff;test<ff+N0;test++)
                {
                  if(f0[test]==f0[ff])
                  {
                      double x=double(n0[test]);  //| --- x vatue of site k

                      dd1+=gof1[test]*exp(II*(qx[iq]*x));
                      dd2+=gof2[test]*exp(II*(qx[iq]*x));
                      //cout<< f0[ff] << "      " <<f0[test] << "   "<<n0[test] << "    " <<dd1<<"    "<<dd2<<endl;
                  }
                  else
                  {
                      break;
                  }

                }

                //cout<< "  " <<endl;
                //cout<< ff<<"    "<<dd1<<"   "<< e[ff]<<endl;
                d+=(pow(abs(dd1),2)+pow(abs(dd2),2))*delta(w,e[ff]);
              }

            file0<<iq <<"     "<<w <<"      " << d.real() <<endl;
            w+=0.001;
          } while (w<11);
        file0<<"    "<<endl;
      }
    //=================================================================================//
    //=================================================================================//
  }
   


    //-----------------------------------------------------------------------------------------------------------------------------------------------
    //-----------------------------------------------------------------------------------------------------------------------------------------------
    if(D==2)
    { 
      //=========================================//
      //=========================================//
      int N0=N; //| == system size
      int nxx=sqrt(N);
      int nyy=sqrt(N);
      int sz=N0/2; //|=== No of up electron
      //===================================================//
      //===================================================//
      vector<double> qx, qy;

      for(double i=0.0;i<M_PI;i+=2.0*M_PI/nxx)
      {
          qx.push_back(i);
          qy.push_back(0);
      }
      //---------------------------- ---------//
      for(double i=0.0;i<M_PI;i+=2.0*M_PI/nyy)
      {
          qx.push_back(M_PI);
          qy.push_back(i);
      }
        //-------------------------------------//
      for(double i=0.0;i<=M_PI;i+=2.0*M_PI/nxx)
      {
          qx.push_back(M_PI-i);
          qy.push_back(M_PI-i);
      }
      //===================================================//
      //===================================================//

      //-------------------------------------------------------------------------------------------
      //------------------------------------------------------------------------------------------
      char title0[150];
      //------------------------------------------------------------------------------------------
      sprintf(title0,"../Data/SX/SSX_%d_%d_%d_%d_%d_%d_%d.dat",ttt0,ttt1,jjt0,jjt1,N,nup,ndown); //| ==== Name | I
      std::ifstream file;               //| ==== File | L
      file.open(title0);                //| ==== Open | E
      //-------------------------------------------------------------------------------------------
      //-------------------------------------------------------------------------------------------

      complex<double> data1=complex<double>(0,0),data2=complex<double>(0,0);
      vector<int> f0,n0;
      vector<complex<double>> gof1,gof2;

      vector<double> e;

      int f1=0,n1=0;
      double e1;

      //===============================================//
      while(file>>f1>>n1>>data1>>data2>>e1) //|G> 
      {
        f0.push_back(f1);
        n0.push_back(n1);
        gof1.push_back(data1);
        gof2.push_back(data2);
        e.push_back(e1);
      }
      //===============================================//

      //-------------------------------------------------------------------------------------------
      //-------------------------------------------------------------------------------------------
      bool tut=createDirectory("../Data/SX/SXQ");
      //-------------------------------------------------------------------------------------------
      char title1[150];
      sprintf(title1,"../Data/SX/SXQ/SSX_%d_%d_%d_%d_%d_%d_%d.dat",ttt0,ttt1,jjt0,jjt1,N,nup,ndown); //| ==== Name | I
      std::ofstream file0;               //| ==== File | L
      file0.open(title1);                //| ==== Open | E
      //-------------------------------------------------------------------------------------------
      //-------------------------------------------------------------------------------------------

      for (int iq = 0; iq < qx.size(); iq++)
      {

            
                
          //=================================================================================//
          double w=0;
          do
          {
              //---------------------------------------------------------------------------------------------------
              complex<double> d=complex<double>(0.0,0.0);
              //---------------------------------------------------------------------------------------------------
              for(int ff=0;ff<f0.size();ff+=N0)
              {
                //-------------------------------------------------------------------------------------------------
                complex<double> dd1=complex<double>(0.0,0.0);
                complex<double> dd2=complex<double>(0.0,0.0);
                complex<double> II=complex<double>(0.0,1.0);
                //-------------------------------------------------------------------------------------------------
                for(int test=ff;test<ff+N0;test++)
                {
                  //-----------------------------------------------------------------------------------------------
                  if(f0[test]==f0[ff])
                  {
                      //-------------------------------------------------------------------------------------------
                      int x=int(n0[test]%nxx);  //| --- x vatue of site k
                      int y=n0[test]/nxx;       //| --- y value of site k
                      //-------------------------------------------------------------------------------------------
                      dd1+=gof1[test]*exp(II*(y*qy[iq]+qx[iq]*x));
                      dd2+=gof2[test]*exp(II*(y*qy[iq]+qx[iq]*x));
                      //-------------------------------------------------------------------------------------------
                      //cout<< f0[ff] << "      " <<f0[test] << "   "<<n0[test] << "    " <<dd1<<"    "<<dd2<<endl;
                  }
                  else
                  {
                      break;
                  }
                  //-----------------------------------------------------------------------------------------------
                }
                //-------------------------------------------------------------------------------------------------
                 //cout<< "  " <<endl;
                 //cout<< ff<<"    "<<dd1<<"   "<< e[ff]<<endl;
                 d+=(pow(abs(dd1),2)+pow(abs(dd2),2))*delta(w,e[ff]);
                //-------------------------------------------------------------------------------------------------
              }
            file0<<iq <<"     "<<w <<"      " << d.real() <<endl;
            //-----------------------------------------------------------------------------------------------------
            w+=0.001;
            //-----------------------------------------------------------------------------------------------------
          } while (w<11);
      }
      //=================================================================================//
      //=================================================================================//
    }
  //-----------------------------------------------------------------------------------------------------------------------------------------------
  //-----------------------------------------------------------------------------------------------------------------------------------------------

}

#endif