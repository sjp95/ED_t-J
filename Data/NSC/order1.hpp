#ifndef ORDER1_HPP_INCLUDED
#define ORDER1_HPP_INCLUDED
#include <iostream>
#include <iomanip>
#include <cmath>
#include <math.h> 
#include <complex>
#include <Eigen/Dense>
#include <fstream>
#include <omp.h>
#include <vector>
#include "input.hpp"

using namespace std;
using namespace Eigen;




void NSC_input::order1_data()
{
     
    //-------------------------------------------------------------------------------------------
    //------------------------------------------------------------------------------------------
    char title0[150];
    //------------------------------------------------------------------------------------------
    sprintf(title0,"../Data/NSC/SXiSiSj/SSX_%d_%d_%d_%d_%d_%d_%d.dat",ttt0,ttt1,jjt0,jjt1,N,nup,ndown); //| ==== Name | I
    std::ofstream file0;               //| ==== File | L
    file0.open(title0);                //| ==== Open | E
    file0 << std::fixed << std::setprecision(16);
    //-------------------------------------------------------------------------------------------
    //-------------------------------------------------------------------------------------------
    
    //======================================================================================================//
    //======================================================================================================//
    for (int ff = 0; ff < nCr(N,nup+1)*nCr(N-nup-1,ndown-1); ff++)
    {
        int flag=0;
        //cout<< ff <<" "<<nCr(N,nup+1)*nCr(N-nup-1,ndown-1)<<endl;
        for (int ii = 0; ii < N; ii++)
        {       
            //---------------------------------------------------------------------------------------------
            char title1[150];
            sprintf(title1,"../Data/NSC/SXiSiSj/SXiSiSj_%d_%d_%d_%d_%d_%d_%d_%d.dat",ttt0,ttt1,jjt0,jjt1,N,nup,ndown,ii); //| ==== Name | I
            std::ifstream file;               //| ==== File | L
            file.open(title1);                //| ==== Open | E
            //---------------------------------------------------------------------------------------------
            if(file)
            {
              //---------------------------------------------------------------------------------------------
              complex<double> data1=complex<double>(0,0),data2=complex<double>(0,0);
              int f1=0,n1=0;
              double e1;
              //---------------------------------------------------------------------------------------------
              
              //---------------------------------------------------------------------------------------------
              while(file>>f1>>n1>>data1>>data2>>e1) //|G> 
              {
                  if(f1==ff)
                  {
                      file0<< f1 <<  "    " <<n1<<  "    " <<data1 <<  "    " <<data2 <<  "    " <<e1 <<endl;
                      break;
                  }
              }
            }
            else
            {
              flag++;
              break;
            }
            
            //---------------------------------------------------------------------------------------------
        }
      file0<< "  " <<endl;
      if(flag>0)
      {
        cout<< "No more file" <<endl;
        break;
      }
    }
    //======================================================================================================//
    //======================================================================================================//

    file0.close();
}
#endif
